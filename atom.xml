<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[Chenkai-Zhu.blog]]></title>
  <subtitle><![CDATA[Whatever is worth doing is worth doing well.]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://yoursite.com/"/>
  <updated>2016-03-08T10:42:59.672Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name><![CDATA[zhuchenkai]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[jQuery第一天笔记]]></title>
    <link href="http://yoursite.com/2016/03/08/jQuery%E7%AC%AC%E4%B8%80%E5%A4%A9%E7%AC%94%E8%AE%B0/"/>
    <id>http://yoursite.com/2016/03/08/jQuery第一天笔记/</id>
    <published>2016-03-08T09:37:24.000Z</published>
    <updated>2016-03-08T10:42:59.672Z</updated>
    <content type="html"><![CDATA[<h2 id="jQuery入门"><a href="#jQuery入门" class="headerlink" title="jQuery入门"></a><strong>jQuery入门</strong></h2><h4 id="JavaScript类库"><a href="#JavaScript类库" class="headerlink" title="JavaScript类库"></a><strong>JavaScript类库</strong></h4><ul>
<li><strong>作用：</strong>JavaScript类库的出现，就是为了简化JavaScript的开发。</li>
<li><strong>内容：</strong>JavaScript类库封装了预定义的对象和函数。</li>
<li><strong>目的：</strong>帮助开发人员建立有高难度交互的Web 2.0特性的富客户端页面，并且兼容各大浏览器。</li>
</ul>
<blockquote>
<p>扩展内容<br>Web 2.0相关概念：</p>
<ol>
<li>Web 1.0：网络 -&gt; 人（单向信息。网络是信息提供者，单向的提供和单一理解）</li>
<li>Web 2.0：人 -&gt; 人（以网络为沟通渠道进行人与人沟通。网络是平台，用户提供信息，通过网络，其他用户获取信息）</li>
<li>Web 3.0：人 -&gt; 网络 -&gt; 人（人与网络之间的双向沟通。网络成为用户需求理解者和提供者）</li>
</ol>
<p>富客户端与瘦客户端：</p>
<ol>
<li>富客户端：（Rich Internet Applications，RIA）利用具有很强交互性的富客户端技术来为用户提供一个更高和更全方位的网络体验。</li>
<li>瘦客户端：（Thin Client）指的是在客户端-服务器网络体系中的一个基本无需应用程序的计算机终端。</li>
</ol>
</blockquote>
<h4 id="jQuery的编程步骤"><a href="#jQuery的编程步骤" class="headerlink" title="jQuery的编程步骤"></a><strong>jQuery的编程步骤</strong></h4><ul>
<li>在HTML页面引入jQuery文件</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 1. 引入jQuery文件 --&gt;</span><br><span class="line">&lt;script src=&quot;jquery-1.11.3.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure>
<ul>
<li>在HTML页面定义元素</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 定义HTML页面元素 --&gt;</span><br><span class="line">&lt;input type=&quot;text&quot; value=&quot;请输入你的用户名&quot; id=&quot;username&quot;&gt;</span><br></pre></td></tr></table></figure>
<ul>
<li>使用jQuery的选择器定位元素</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">// 2. 使用jQuery选择器定位HTML页面元素</span><br><span class="line">var $username = $(&quot;#username&quot;);</span><br></pre></td></tr></table></figure>
<ul>
<li>利用jQuery提供的API完成需求</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">// 3. 调用jQuery的API方法</span><br><span class="line">console.log($username.val());</span><br></pre></td></tr></table></figure>
<h4 id="jQuery基础内容"><a href="#jQuery基础内容" class="headerlink" title="jQuery基础内容"></a><strong>jQuery基础内容</strong></h4><h5 id="jQuery工厂函数"><a href="#jQuery工厂函数" class="headerlink" title="jQuery工厂函数"></a><strong>jQuery工厂函数</strong></h5><p>jQuery的工厂函数算做是jQuery的一个入口，通过它既可以使用选择器，也可以包装DOM对象，还可以创建元素等功能。</p>
<p><strong>工厂函数的写法有两种：</strong></p>
<ul>
<li>第一种是<code>$( )</code></li>
<li>第二种是<code>jQuery( )</code></li>
</ul>
<blockquote>
<p>这里的”$”符号就表示jQuery，是jQuery的一个约定。<br>不仅如此，jQuery也建议通过jQuery获取的元素变量前都增加”$”符号。目前有很多JS库都效仿了jQuery的这种做法，当然也引起了多个使用””的JS库一起使用时的&gt;一些冲突，主要还是集中在”$”的使用权上。</p>
</blockquote>
<h5 id="jQuery对象与DOM对象"><a href="#jQuery对象与DOM对象" class="headerlink" title="jQuery对象与DOM对象"></a><strong>jQuery对象与DOM对象</strong></h5><ul>
<li>DOM对象<br>定义：是指通过DOM获取的元素。</li>
<li>jQuery对象<br>1.定义：是通过包装DOM对象后产生的一种对象（jQuery自定义的全局对象）。<br>2.可以说jQuery底层其实还是DOM对象。<br>3.<strong>注意:</strong>jQuery是类数组对象，所以jQuery对象中可能包含多个DOM对象或一个DOM对象，这要看具体情况。</li>
<li><p>DOM对象转换为jQuery对象<br>DOM对象要想转换为jQuery对象，需要使用jQuery的工厂函数 $( ) 将其包裹，返回的就是对应的jQuery对象。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">// DOM对象</span><br><span class="line">var username = document.getElementById(&quot;username&quot;);</span><br><span class="line">// DOM对象转换为jQuery对象</span><br><span class="line">var $username = $(username);</span><br><span class="line">// 测试</span><br><span class="line">console.log($username.val());</span><br></pre></td></tr></table></figure>
</li>
<li><p>jQuery对象转换为DOM对象</p>
</li>
</ul>
<ol>
<li><p>jQuery对象是数组对象。jQuery对象[索引值]可以直接转换为对应的DOM对象</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">// jQuery对象</span><br><span class="line">var $user = $(&quot;#username&quot;);</span><br><span class="line">// 1. jQuery对象是数组对象</span><br><span class="line">var user1 = $user[0];</span><br><span class="line">// 测试</span><br><span class="line">console.log(user1.value);</span><br></pre></td></tr></table></figure>
</li>
<li><p>jQuery提供了get(index)方法。jQuery对象.get(索引值)也可以转换为对应的DOM对象</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">// jQuery对象</span><br><span class="line">var $user = $(&quot;#username&quot;);</span><br><span class="line">// 2. jQuery提供get(index)方法进行转换</span><br><span class="line">var user2 = $user.get(0);</span><br><span class="line">// 测试</span><br><span class="line">console.log(user2.value);</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="jQuery选择器"><a href="#jQuery选择器" class="headerlink" title="jQuery选择器"></a><strong>jQuery选择器</strong></h2><h4 id="什么是jQuery的选择器"><a href="#什么是jQuery的选择器" class="headerlink" title="什么是jQuery的选择器"></a><strong>什么是jQuery的选择器</strong></h4><p>jQuery的选择器的想法是源于CSS中的选择器的用法，其实在JavaScript中也有类似的用法，比如querySelector( )或querySelectorAll( )方法的使用，也是借助CSS中的选择器来定位HTML页面元素的。只不过相比jQuery中的选择器，JavaScript中的querySelector( )或querySelectorAll( )方法的性能相对差一些而已。</p>
<p>jQuery的选择器最主要的作用就是用于定位HTML页面的元素。它不仅可以定位HTML页面中具体某个元素，还可以通过各种方式定位复合条件的一组元素等等。</p>
<p>jQuery的选择器最大的特点就是将定位元素和元素行为进行了有效的分离。这是在实际开发中非常必要的一项特点！</p>
<h4 id="jQuery选择器的种类"><a href="#jQuery选择器的种类" class="headerlink" title="jQuery选择器的种类"></a><strong>jQuery选择器的种类</strong></h4><p>jQuery中使用其工厂函数 $( ) 作为容器，来接收jQuery的选择器内容。而jQuery的选择器则以字符串形式传递给jQuery的工厂函数。jQuery的选择器种类大概可以分为以下几种：</p>
<h5 id="基本选择器"><a href="#基本选择器" class="headerlink" title="基本选择器"></a><strong>基本选择器</strong></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">//选择 id为 one 的元素</span><br><span class="line">$(&apos;#btn1&apos;).click(function()&#123;</span><br><span class="line">    $(&apos;#one&apos;).css(&quot;background&quot;,&quot;#bfa&quot;);</span><br><span class="line">&#125;);</span><br><span class="line">//选择 class 为 mini 的所有元素</span><br><span class="line">$(&apos;#btn2&apos;).click(function()&#123;</span><br><span class="line">    $(&apos;.mini&apos;).css(&quot;background&quot;,&quot;#bfa&quot;);</span><br><span class="line">&#125;);</span><br><span class="line">//选择 元素名是 div 的所有元素</span><br><span class="line">$(&apos;#btn3&apos;).click(function()&#123;</span><br><span class="line">    $(&apos;div&apos;).css(&quot;background&quot;,&quot;#bfa&quot;);</span><br><span class="line">&#125;);</span><br><span class="line">//选择 所有的元素</span><br><span class="line">$(&apos;#btn4&apos;).click(function()&#123;</span><br><span class="line">    $(&apos;*&apos;).css(&quot;background&quot;,&quot;#bfa&quot;);</span><br><span class="line">&#125;);</span><br><span class="line">//选择 所有的span元素和id为two的div元素</span><br><span class="line">$(&apos;#btn5&apos;).click(function()&#123;</span><br><span class="line">    $(&apos;span,#two&apos;).css(&quot;background&quot;,&quot;#bfa&quot;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<blockquote>
<p>需要注意</p>
<ol>
<li>通配符选择器（*）默认匹配HTML页面中所有的元素。</li>
<li>复合选择器（多个选择器并列使用）的使用，每个选择器之间使用”,”进行分割。并且复合选择器匹配的结果是多个选择器的并集效果。</li>
</ol>
</blockquote>
<h5 id="层级选择器"><a href="#层级选择器" class="headerlink" title="层级选择器"></a><strong>层级选择器</strong></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">//选择 body内的所有div元素.</span><br><span class="line">$(&apos;#btn1&apos;).click(function()&#123;</span><br><span class="line">    $(&apos;body div&apos;).css(&quot;background&quot;,&quot;#bbffaa&quot;);</span><br><span class="line">&#125;)</span><br><span class="line">//在body内的选择 元素名是div 的子元素.</span><br><span class="line">$(&apos;#btn2&apos;).click(function()&#123;</span><br><span class="line">    $(&apos;body &gt; div&apos;).css(&quot;background&quot;,&quot;#bbffaa&quot;);</span><br><span class="line">&#125;)</span><br><span class="line">//选择 所有class为one 的下一个div元素.</span><br><span class="line">$(&apos;#btn3&apos;).click(function()&#123;</span><br><span class="line">    $(&apos;.one + div&apos;).css(&quot;background&quot;,&quot;#bbffaa&quot;);</span><br><span class="line">&#125;)</span><br><span class="line">//选择 id为two的元素后面的所有div兄弟元素.</span><br><span class="line">$(&apos;#btn4&apos;).click(function()&#123;</span><br><span class="line">    $(&apos;#two ~ div&apos;).css(&quot;background&quot;,&quot;#bbffaa&quot;);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
<blockquote>
<p>需要注意</p>
<ol>
<li>selectors~selector2选择器，是获取符合selector1选择器的元素后面所有符合selector2选择器的兄弟元素。jQuery中还有一个方法siblings( )，是获取指定元素的所有兄弟元素。</li>
</ol>
</blockquote>
<h5 id="基本过滤选择器"><a href="#基本过滤选择器" class="headerlink" title="基本过滤选择器"></a><strong>基本过滤选择器</strong></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">//选择第一个div元素.</span><br><span class="line">$(&apos;#btn1&apos;).click(function()&#123;</span><br><span class="line">    $(&apos;div:first&apos;).css(&quot;background&quot;,&quot;#bfa&quot;);</span><br><span class="line">&#125;)</span><br><span class="line">//选择最后一个div元素.</span><br><span class="line">$(&apos;#btn2&apos;).click(function()&#123;</span><br><span class="line">    $(&apos;div:last&apos;).css(&quot;background&quot;,&quot;#bfa&quot;);</span><br><span class="line">&#125;)</span><br><span class="line">//选择class不为one的 所有div元素.</span><br><span class="line">$(&apos;#btn3&apos;).click(function()&#123;</span><br><span class="line">    $(&apos;div:not(.one)&apos;).css(&quot;background&quot;,&quot;#bfa&quot;);</span><br><span class="line">&#125;)</span><br><span class="line">//选择 索引值为偶数 的div元素。</span><br><span class="line">$(&apos;#btn4&apos;).click(function()&#123;</span><br><span class="line">    $(&apos;div:even&apos;).css(&quot;background&quot;,&quot;#bfa&quot;);</span><br><span class="line">&#125;)</span><br><span class="line">//选择 索引值为奇数 的div元素。</span><br><span class="line">$(&apos;#btn5&apos;).click(function()&#123;</span><br><span class="line">    $(&apos;div:odd&apos;).css(&quot;background&quot;,&quot;#bfa&quot;);</span><br><span class="line">&#125;)</span><br><span class="line">//选择 索引等于 3 的元素</span><br><span class="line">$(&apos;#btn6&apos;).click(function()&#123;</span><br><span class="line">    $(&apos;div:eq(3)&apos;).css(&quot;background&quot;,&quot;#bfa&quot;);</span><br><span class="line">&#125;)</span><br><span class="line">//选择 索引大于 3 的元素</span><br><span class="line">$(&apos;#btn7&apos;).click(function()&#123;</span><br><span class="line">    $(&apos;div:gt(3)&apos;).css(&quot;background&quot;,&quot;#bfa&quot;);</span><br><span class="line">&#125;)</span><br><span class="line">//选择 索引小于 3 的元素</span><br><span class="line">$(&apos;#btn8&apos;).click(function()&#123;</span><br><span class="line">    $(&apos;div:lt(3)&apos;).css(&quot;background&quot;,&quot;#bfa&quot;);</span><br><span class="line">&#125;)</span><br><span class="line">//选择 所有的标题元素.比如h1, h2, h3等等...</span><br><span class="line">$(&apos;#btn9&apos;).click(function()&#123;</span><br><span class="line">    $(&apos;:header&apos;).css(&quot;background&quot;,&quot;#bfa&quot;);</span><br><span class="line">&#125;)</span><br><span class="line">//选择 当前正在执行动画的所有元素.</span><br><span class="line">$(&apos;#btn10&apos;).click(function()&#123;</span><br><span class="line">    $(&apos;:animated&apos;).css(&quot;background&quot;,&quot;#bfa&quot;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<blockquote>
<p>需要注意</p>
<ol>
<li>“:not(selector)”选择器，不仅可以匹配到class属性值不是one的元素，还匹配到没有class属性的元素。这不仅仅只是一个反操作的过程。</li>
<li>“:even”和”:odd”选择器，表示索引值为偶数或者索引值为奇数的元素，但是需要注意的是索引值是从 0 开始的。</li>
<li>:header”选择器，是匹配 h1 - h6 标题元素，并不能匹配指定的某个标题元素。如果需要匹配具体某个标题元素可以使用元素选择器，所以这种用法在实际开发中很少见到。</li>
<li>“:animated”选择器，是匹配正在执行动画效果的元素，但需要注意的是它只能匹配jQuery执行的动画效果，而不能匹配其他技术实现的动画效果。</li>
</ol>
</blockquote>
<h5 id="内容过滤选择器"><a href="#内容过滤选择器" class="headerlink" title="内容过滤选择器"></a><strong>内容过滤选择器</strong></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">//选取含有文本&quot;di&quot;的div元素.</span><br><span class="line">$(&apos;#btn1&apos;).click(function()&#123;</span><br><span class="line">    $(&apos;div:contains(di)&apos;).css(&quot;background&quot;,&quot;#bbffaa&quot;);</span><br><span class="line">&#125;)</span><br><span class="line">//选取不包含子元素(或者文本元素)的div空元素.</span><br><span class="line">$(&apos;#btn2&apos;).click(function()&#123;</span><br><span class="line">    $(&apos;div:empty&apos;).css(&quot;background&quot;,&quot;#bbffaa&quot;);</span><br><span class="line">&#125;)</span><br><span class="line">//选取含有class为mini元素 的div元素.</span><br><span class="line">$(&apos;#btn3&apos;).click(function()&#123;</span><br><span class="line">    $(&apos;div:has(.mini)&apos;).css(&quot;background&quot;,&quot;#bbffaa&quot;);</span><br><span class="line">&#125;)</span><br><span class="line">//选取含有子元素(或者文本元素)的div元素.</span><br><span class="line">$(&apos;#btn4&apos;).click(function()&#123;</span><br><span class="line">    $(&apos;div:parent&apos;).css(&quot;background&quot;,&quot;#bbffaa&quot;);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
<blockquote>
<p>需要注意</p>
<ol>
<li>“:has(selector)”选择器，匹配含有符合selector选择器元素的元素，并不是匹配符合selector的元素。</li>
</ol>
</blockquote>
<h5 id="可见性过滤选择器"><a href="#可见性过滤选择器" class="headerlink" title="可见性过滤选择器"></a><strong>可见性过滤选择器</strong></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">//选取所有不可见的元素.包括&lt;input type=&quot;hidden&quot;/&gt;.</span><br><span class="line">$(&apos;#btn_hidden&apos;).click(function()&#123;</span><br><span class="line">    $(&apos;div:hidden&apos;).show(3000).css(&quot;background&quot;,&quot;#bbffaa&quot;);</span><br><span class="line">&#125;)</span><br><span class="line">//选取所有可见的元素.</span><br><span class="line">$(&apos;#btn_visible&apos;).click(function()&#123;</span><br><span class="line">    $(&apos;div:visible&apos;).css(&quot;background&quot;,&quot;#FF6500&quot;);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
<blockquote>
<p>需要注意</p>
<ol>
<li>show( )方法表示将隐藏的元素显示，其参数表示动画执行的时长。（后面的内容会详细讲到）。</li>
</ol>
</blockquote>
<h5 id="属性过滤选择器"><a href="#属性过滤选择器" class="headerlink" title="属性过滤选择器"></a><strong>属性过滤选择器</strong></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">//选取含有 属性title 的div元素.</span><br><span class="line">$(&apos;#btn1&apos;).click(function()&#123;</span><br><span class="line">    $(&apos;div[title]&apos;).css(&quot;background&quot;,&quot;#bbffaa&quot;);</span><br><span class="line">&#125;)</span><br><span class="line">//选取 属性title值等于 test 的div元素.</span><br><span class="line">$(&apos;#btn2&apos;).click(function()&#123;</span><br><span class="line">    $(&apos;div[title=test]&apos;).css(&quot;background&quot;,&quot;#bbffaa&quot;);</span><br><span class="line">&#125;)</span><br><span class="line">//选取 属性title值不等于 test 的div元素.</span><br><span class="line">$(&apos;#btn3&apos;).click(function()&#123;</span><br><span class="line">    $(&apos;div[title!=test]&apos;).css(&quot;background&quot;,&quot;#bbffaa&quot;);</span><br><span class="line">&#125;)</span><br><span class="line">//选取 属性title值 以 te 开始 的div元素.</span><br><span class="line">$(&apos;#btn4&apos;).click(function()&#123;</span><br><span class="line">    $(&apos;div[title^=te]&apos;).css(&quot;background&quot;,&quot;#bbffaa&quot;);</span><br><span class="line">&#125;)</span><br><span class="line">//选取 属性title值 以 est 结束 的div元素.</span><br><span class="line">$(&apos;#btn5&apos;).click(function()&#123;</span><br><span class="line">    $(&quot;div[title$=est]&quot;).css(&quot;background&quot;,&quot;#bbffaa&quot;);</span><br><span class="line">&#125;)</span><br><span class="line">//选取 属性title值 含有 es  的div元素.</span><br><span class="line">$(&apos;#btn6&apos;).click(function()&#123;</span><br><span class="line">    $(&quot;div[title*=es]&quot;).css(&quot;background&quot;,&quot;#bbffaa&quot;);</span><br><span class="line">&#125;)</span><br><span class="line">//组合属性选择器,首先选取有属性id的div元素，然后在结果中 选取属性title值 含有 es 的元素.</span><br><span class="line">$(&apos;#btn7&apos;).click(function()&#123;</span><br><span class="line">    $(&quot;div[id][title*=es]&quot;).css(&quot;background&quot;,&quot;#bbffaa&quot;);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
<blockquote>
<p>需要注意</p>
<ol>
<li>“[attrName!=value]”选择器，匹配attrName属性的值不等于value的元素，但也包含没有attrName属性的所有元素。</li>
<li>“[attribute][attribute]”属性复合选择器，是多个属性过滤选择器并列使用，匹配的结果是多个属性过滤选择器的交集。</li>
</ol>
</blockquote>
<h5 id="子元素过滤选择器"><a href="#子元素过滤选择器" class="headerlink" title="子元素过滤选择器"></a><strong>子元素过滤选择器</strong></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">//选取每个父元素下的第2个子元素</span><br><span class="line">$(&apos;#btn1&apos;).click(function()&#123;</span><br><span class="line">    $(&apos;div.one :nth-child(2)&apos;).css(&quot;background&quot;,&quot;#bbffaa&quot;);</span><br><span class="line">&#125;)</span><br><span class="line">//选取每个父元素下的第一个子元素</span><br><span class="line">$(&apos;#btn2&apos;).click(function()&#123;</span><br><span class="line">    $(&apos;div.one :first-child&apos;).css(&quot;background&quot;,&quot;#bbffaa&quot;);</span><br><span class="line">&#125;)</span><br><span class="line">//选取每个父元素下的最后一个子元素</span><br><span class="line">$(&apos;#btn3&apos;).click(function()&#123;</span><br><span class="line">    $(&apos;div.one :last-child&apos;).css(&quot;background&quot;,&quot;#bbffaa&quot;);</span><br><span class="line">&#125;)</span><br><span class="line">//如果父元素下的仅仅只有一个子元素，那么选中这个子元素</span><br><span class="line">$(&apos;#btn4&apos;).click(function()&#123;</span><br><span class="line">    $(&apos;div.one :only-child&apos;).css(&quot;background&quot;,&quot;#bbffaa&quot;);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
<blockquote>
<p>需要注意</p>
<ol>
<li>子元素过滤选择器的特殊用法，就是在其前面需要增加空格。不然子元素过滤选择器将不会有效果！</li>
<li>“nth-child(index)”选择器中的index是从 0 开始的。</li>
</ol>
</blockquote>
<h5 id="表单对象属性过滤选择器"><a href="#表单对象属性过滤选择器" class="headerlink" title="表单对象属性过滤选择器"></a><strong>表单对象属性过滤选择器</strong></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">//对表单内 可用input 赋值操作.</span><br><span class="line">$(&apos;#btn1&apos;).click(function()&#123;</span><br><span class="line">    $(&quot;#form1 input:enabled&quot;).val(&quot;这里变化了！&quot;);</span><br><span class="line">    return false;</span><br><span class="line">&#125;)</span><br><span class="line">//对表单内 不可用input 赋值操作.</span><br><span class="line">$(&apos;#btn2&apos;).click(function()&#123;</span><br><span class="line">    $(&quot;#form1 input:disabled&quot;).val(&quot;这里变化了！&quot;);</span><br><span class="line">    return false;</span><br><span class="line">&#125;)</span><br><span class="line">$(&quot;:checkbox&quot;).click(countChecked);</span><br><span class="line">function countChecked() &#123;</span><br><span class="line">    var n = $(&quot;input:checked&quot;).length;</span><br><span class="line">    $(&quot;div&quot;).eq(0).html(&quot;&lt;strong&gt;有&quot;+n+&quot; 个被选中!&lt;/strong&gt;&quot;);</span><br><span class="line">&#125;</span><br><span class="line">countChecked();//进入页面就调用.</span><br><span class="line">$(&quot;select&quot;).change(function () &#123;</span><br><span class="line">    var str = &quot;&quot;;</span><br><span class="line">    $(&quot;select :selected&quot;).each(function () &#123;</span><br><span class="line">         str += $(this).text() + &quot;,&quot;;</span><br><span class="line">    &#125;);</span><br><span class="line">    $(&quot;div&quot;).eq(1).html(&quot;&lt;strong&gt;你选中的是：&quot;+str+&quot;&lt;/strong&gt;&quot;);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
<blockquote>
<p>需要注意</p>
<ol>
<li>“:checked”选择器，匹配checkbox和radio元素中被选中的。</li>
<li>“:selected”选择器，匹配select元素中option元素被选中的。</li>
</ol>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="jQuery入门"><a href="#jQuery入门" class="headerlink" title="jQuery入门"></a><strong>jQuery入门</strong></h2><h4 id="JavaScript类库"><a href="#]]>
    </summary>
    
      <category term="笔记" scheme="http://yoursite.com/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Ck-zhu的博客]]></title>
    <link href="http://yoursite.com/2016/03/08/Ck-zhu%E7%9A%84%E5%8D%9A%E5%AE%A2/"/>
    <id>http://yoursite.com/2016/03/08/Ck-zhu的博客/</id>
    <published>2016-03-08T07:46:35.000Z</published>
    <updated>2016-03-08T10:45:50.114Z</updated>
    <content type="html"><![CDATA[<p>欢迎参观！<br>本着学习的目的构建了个人博客，敬请指正。</p>
<h2 id="初识"><a href="#初识" class="headerlink" title="初识"></a>初识</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Hexo，这个逼格极高的程序猿写作方式，我喜欢。</span><br></pre></td></tr></table></figure>
<blockquote>
<p>–Whatever is worth doing is worth doing well.</p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<p>欢迎参观！<br>本着学习的目的构建了个人博客，敬请指正。</p>
<h2 id="初识"><a href="#初识" class="headerlink" title="初识"></a>初识</h2><figure class="highlight bash"><tabl]]>
    </summary>
    
      <category term="自我学习" scheme="http://yoursite.com/tags/%E8%87%AA%E6%88%91%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
</feed>
